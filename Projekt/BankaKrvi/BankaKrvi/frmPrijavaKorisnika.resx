<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>